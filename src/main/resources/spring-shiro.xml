<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!-- securityManager -->
<bean id ="securityManager" class ="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
      <property name ="realm" ref ="customRealm" />
   <!-- <property name ="cacheManager" ref ="cacheManager" /> -->
    <!--<property name ="sessionManager" ref ="sessionManager"/> -->
</bean>

<!-- realm -->
<bean id ="customRealm" class ="cn.bestrivenlf.Realm.MyRealm">
<property name="credentialsMatcher">
	<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="MD5">
		
		</property>
		<property name="hashIterations" value="1000"></property>
	</bean>
</property>
</bean>

<!-- lifecycle -->
<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />  

<!-- 开启shiro的注解支持 -->  
<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">  
  <!-- 必须改为true，即使用cglib方式为Action创建代理对象。默认值为false，使用JDK创建代理对象，会造成问题 -->  
  	<property name="proxyTargetClass" value="true"></property>  
</bean>  
 <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean> 

<!-- web.xml中shiro的filter对应的bean -->
<!-- shiro的web过滤器 -->
<bean id ="shiroFilter" class = "org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name ="securityManager" ref ="securityManager" />
<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求地址将由formAuthenticationFilter进行表单认证 -->
    <property name ="loginUrl" value ="/login.jsp"/>
    <property name ="unauthorizedUrl" value ="/error"/>
    
<!-- 过滤器链定义:从上向下顺序执行，一般将/**放在最下边 
	<property name ="filters">
		<map>
			<entry key ="authc" value-ref ="formAuthenticationFilter"/>
		</map>
	</property>-->
    <property name ="filterChainDefinitions">
        <value>
        	<!-- 对静态资源设置匿名访问 -->
        	/login.jsp=anon
        	/user/logout = logout
        	/Test/login=anon
        	/**=authc
        </value>
    </property>
</bean>

</beans>